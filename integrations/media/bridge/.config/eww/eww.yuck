;; СЛУШАЕМ события от mpris-bridged вместо ежесекундного опроса
(deflisten mpris-bridge-events
  :json true
  :initial "{\"name\":\"\",\"title\":\"\",\"artist\":\"\",\"status\":\"\",\"position\":0,\"positionStr\":\"0:00\",\"length\":0,\"lengthStr\":\"0:00\",\"thumbnail\":\"$HOME/.config/eww/scripts/cover.png\",\"canNext\":0,\"canPrev\":0}"
  "sh -lc 'tail -n0 -F \"$XDG_RUNTIME_DIR/mpris-bridge/events.jsonl\"'")

;; --- --- --- VENTANAS --- --- ---

(defwindow services
           :monitor 0
           :focusable "ondemand"
           :geometry (geometry :x "10px"
                               :y "10px"
                               :width "200px"
                               :height "450px"
                               :anchor "top right")
           :stacking "fg"
           :reserve (struts :distance "0px" :side "top")
           :wm-ignore "false"
           :focusable "false"
           (Userctl)
)

;; --- --- --- SERVICIOS WIDGETS --- --- ---

(defwidget Userctl []
           (box :orientation "vertical" 
                :space-evenly false
                :class "services"
                (box  :orientation "horizontal"
                      :space-evenly false
                      (box :class "app-icon")
                      (UserTitle :text "orcaex")
                      (close-button))

                (box :orientation "horizontal"
                      :class "events-box"
                      :space-evenly true
                      (box :class "cpu-box"
                            :orientation "vertical"
                            (eventbox :class "cpu-hover"

                                  (circular-progress :class "cpu"
                                        :value {round(EWW_CPU.avg,10)}
                                        :thickness 5
                                        (box :class "cpu-ico"
                                              (label :text ""))))
                            
                            (box :class "cpu-text" 
                                  :space-evenly false
                                  :halign "center"
                                  (label :text "CPU:")
                                  (label :text "${round(EWW_CPU.avg,0)}%")))

                      (box :class "disk-box"
                            :orientation "vertical"
                            (eventbox
                                  (circular-progress :class "disk"
                                        :value {round(EWW_DISK["/"].used_perc,10)}
                                        :thickness 5
                                        (box :class "disk-ico"
                                              (label :text ""))))
                            (box :class "disk-text" 
                                  :space-evenly false
                                  :halign "center"
                                  (label :text "ROM:")
                                  (label :text "${round(EWW_DISK["/"].used_perc,0)}%")))

                      (box :class "ram-box"
                            :orientation "vertical"
                            (eventbox
                                  (circular-progress :class "ram"
                                        :value {round(EWW_RAM.used_mem_perc,10)}
                                        :thickness 5
                                        (box :class "ram-ico"
                                              (label :text ""))))
                            (box :class "ram-text" 
                                  :space-evenly false
                                  :halign "center"
                                  (label :text "RAM:")
                                  (label :text "${round(EWW_RAM.used_mem_perc,0)}%"))))

                (box :orientation "horizontal" :class "music-panel"
                      :space-evenly false
                      (box :class "album-ico"
                            :style "background-image: url('${mpris-bridge-events.thumbnail}');")
                      (box :class "music-box" :orientation "vertical" :space-evenly false
                            (label :text "${mpris-bridge-events.title}" :halign "start" :limit-width 21 :class "music-title")
                            (box :orientation "horizontal"
                              (label :text "${mpris-bridge-events.artist}" :halign "start" :limit-width 25 :class "music-artist")
                              (label :text "${mpris-bridge-events.positionStr}/${mpris-bridge-events.lengthStr}" :class "music-time"))
                            (scale :class "music-slider" :min 0 :max {mpris-bridge-events.length} :value {mpris-bridge-events.position})
                            (box :orientation "horizontal" :class "music-controls" :space-evenly false
                              (back-button)
                              (play-button)
                              (next-button))))

                (box :orientation "vertical"
                      :space-evenly false
                      (ServiceTitle :text "Services")
                      (box :orientation "vertical"
                            :spacing 8
                            (dhcpcd-button)
                            (box :orientation "horizontal"
                                    (xampp-ON-button)
                                    (xampp-OFF-button))))

                (box :orientation "vertical"
                      :space-evenly false
                      (BgTitle :text "Backgrounds")
                      (box :orientation "vertical"
                            :spacing 10
                            (box :orientation "horizontal" :spacing 6
                                  (bg-1)
                                  (bg-2)
                                  (bg-3)
                                  (bg-4))
                            (box :orientation "horizontal" :spacing 6
                                  (bg-5)
                                  (bg-6)
                                  (bg-7)
                                  (bg-8))))))

(defwidget space [text]
  (label :text :text
         :class "space"))

(defwidget ServiceTitle [text]
  (label :text text
         :class "service-title"))

(defwidget BgTitle [text]
  (label :text text
         :class "bg-title"))

(defwidget UserTitle [text]
  (label :text text
         :class "user-title"))

(defwidget close-button []
    (button
        :onclick "eww close services"
        :class "close-btn"
        "×"))

;; Кнопки управления: таргетим текущий плеер и не шумим в логи
(defwidget back-button []
  (button
    :class {mpris-bridge-events.canPrev == 1 ? "back-btn" : "back-btn disabled"}
    :onclick "mpris-bridgec previous --player ${mpris-bridge-events.name}"
    "󰒮"))

(defwidget next-button []
  (button
    :class {mpris-bridge-events.canNext == 1 ? "next-btn" : "next-btn disabled"}
    :onclick "mpris-bridgec next --player ${mpris-bridge-events.name}"
    "󰒭"))

(defwidget play-button []
  (button
    :class "play-btn"
    :onclick "mpris-bridgec play-pause --player ${mpris-bridge-events.name}"
    {mpris-bridge-events.status == "Playing" ? "󰓛" : "󰐊"}))

;; Слайдер прогресса: абсолютная позиция
(defwidget media-seek []
  (scale
    :min 0
    :max {mpris-bridge-events.length > 0 ? mpris-bridge-events.length : 1}
    :value {mpris-bridge-events.position}
    :onchange "mpris-bridgec set-position {} --player ${mpris-bridge-events.name}"
    :hexpand true))

;; Кнопки сервисов через pkexec в фоне, важны двойные кавычки для fish -c
(defwidget dhcpcd-button []
  (button
    :class "dhcpcd-btn"
    :onclick "fish -c \"nohup pkexec /usr/bin/systemctl restart dhcpcd.service >/dev/null 2>&1 &; disown\""
    "dhcpcd"))

(defwidget xampp-ON-button []
  (button
    :class "xampp-on-btn"
    :onclick "fish -c \"nohup pkexec /opt/lampp/lampp start >/dev/null 2>&1 &; disown\""
    "Xampp ON"))

(defwidget xampp-OFF-button []
  (button
    :class "xampp-off-btn"
    :onclick "fish -c \"nohup pkexec /opt/lampp/lampp stop >/dev/null 2>&1 &; disown\""
    "Xampp OFF"))

;; Resolved wallpaper paths for previews (poll rarely to keep it cheap)
(defpoll bg1 :interval "600s" "$HOME/.local/bin/wall_path 001")
(defpoll bg2 :interval "600s" "$HOME/.local/bin/wall_path 002")
(defpoll bg3 :interval "600s" "$HOME/.local/bin/wall_path 003")
(defpoll bg4 :interval "600s" "$HOME/.local/bin/wall_path 004")
(defpoll bg5 :interval "600s" "$HOME/.local/bin/wall_path 005")
(defpoll bg6 :interval "600s" "$HOME/.local/bin/wall_path 006")
(defpoll bg7 :interval "600s" "$HOME/.local/bin/wall_path 007")
(defpoll bg8 :interval "600s" "$HOME/.local/bin/wall_path 008")

(defwidget bg-1 []
  (button
    :class "background-btn"
    :style "background-image: url('${bg1}');"
    :onclick "fish -c \"nohup $HOME/.local/bin/wall 001 >/dev/null 2>&1 &; disown\""
    ""))

(defwidget bg-2 []
  (button
    :class "background-btn"
    :style "background-image: url('${bg2}');"
    :onclick "fish -c \"nohup $HOME/.local/bin/wall 002 >/dev/null 2>&1 &; disown\""
    ""))

(defwidget bg-3 []
  (button
    :class "background-btn"
    :style "background-image: url('${bg3}');"
    :onclick "fish -c \"nohup $HOME/.local/bin/wall 003 >/dev/null 2>&1 &; disown\""
    ""))

(defwidget bg-4 []
  (button
    :class "background-btn"
    :style "background-image: url('${bg4}');"
    :onclick "fish -c \"nohup $HOME/.local/bin/wall 004 >/dev/null 2>&1 &; disown\""
    ""))

(defwidget bg-5 []
  (button
    :class "background-btn"
    :style "background-image: url('${bg5}');"
    :onclick "fish -c \"nohup $HOME/.local/bin/wall 005 >/dev/null 2>&1 &; disown\""
    ""))

(defwidget bg-6 []
  (button
    :class "background-btn"
    :style "background-image: url('${bg6}');"
    :onclick "fish -c \"nohup $HOME/.local/bin/wall 006 >/dev/null 2>&1 &; disown\""
    ""))

(defwidget bg-7 []
  (button
    :class "background-btn"
    :style "background-image: url('${bg7}');"
    :onclick "fish -c \"nohup $HOME/.local/bin/wall 007 >/dev/null 2>&1 &; disown\""
    ""))

(defwidget bg-8 []
  (button
    :class "background-btn"
    :style "background-image: url('${bg8}');"
    :onclick "fish -c \"nohup $HOME/.local/bin/wall 008 >/dev/null 2>&1 &; disown\""
    ""))